apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'

repositories {
    mavenCentral()
}

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    useLibrary 'org.apache.http.legacy' //robolectric requiere acceso a la librería http

    defaultConfig {
        applicationId "edu.galileo.android.tipcalc"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 2
        versionName "2.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            resValue "string", "FACEBOOK_PROVIDER_AUTH", project.property('FACEBOOK_PROVIDER') + project.property('FACEBOOK_APP_ID')
            resValue "string", "FACEBOOK_APP_ID", project.property('FACEBOOK_APP_ID')
            resValue "string", "GOOGLE_MAPS_API_KEY", project.property('GOOGLE_MAPS_API_KEY')
        }
        debug{
            resValue "string", "FACEBOOK_PROVIDER_AUTH", project.property('FACEBOOK_PROVIDER') + project.property('FACEBOOK_APP_ID')
            resValue "string", "FACEBOOK_APP_ID", project.property('FACEBOOK_APP_ID')
            resValue "string", "GOOGLE_MAPS_API_KEY", project.property('GOOGLE_MAPS_API_KEY')
        }
    }

    packagingOptions {
        exclude 'META-INF/LICENCE'
        exclude 'META-INF/LICENCE-FIREBASE.txt'
        exclude 'META-INF/NOTICE'
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    //librerías para testing
    testCompile "junit:junit:$rootProject.ext.junitVersion"  // unit testing
    testCompile "org.robolectric:robolectric:$rootProject.ext.robolectricVersion" // pruebas que necesitan algo de android (esta lib no requiere un dispositivo)
    testCompile "org.mockito:mockito-all:$rootProject.ext.mockitoVersion" // mocks

    compile "com.android.support:recyclerview-v7:$rootProject.ext.supportLibraryVersion"
    compile "com.android.support:appcompat-v7:$rootProject.ext.supportLibraryVersion"
    compile "com.android.support:design:$rootProject.ext.supportLibraryVersion"
    compile "com.android.support:support-v4:$rootProject.ext.supportLibraryVersion"

    //librerías para dagger
    apt "com.google.dagger:dagger-compiler:$rootProject.ext.daggerVersion"
    compile "javax.annotation:jsr250-api:$rootProject.ext.jsr250Version"
    compile "com.google.dagger:dagger:$rootProject.ext.daggerVersion"

    //librerías comunes
    compile "com.jakewharton:butterknife:$rootProject.ext.butterknifeVersion"
    compile "com.github.bumptech.glide:glide:$rootProject.ext.glideVersion"
    compile "org.greenrobot:eventbus:$rootProject.ext.eventbusVersion"
    compile "com.facebook.android:facebook-android-sdk:$rootProject.ext.facebookVersion"
    compile "com.squareup.retrofit2:converter-gson:$rootProject.ext.retrofitVersion" //plugin para convertir a un objeto
    compile "com.squareup.retrofit2:retrofit:$rootProject.ext.retrofitVersion"
    compile "de.hdodenhof:circleimageview:$rootProject.ext.circleImageViewVersion"
    compile "com.firebase:firebase-client-android:$rootProject.ext.firebaseClientVersion"

    //librerías para gps
    compile "com.google.android.gms:play-services-location:$rootProject.ext.playServicesLocationVersion"

    //librerías para dbflow
    apt "com.github.Raizlabs.DBFlow:dbflow-processor:$rootProject.ext.dbflowVersion"
    compile "com.github.Raizlabs.DBFlow:dbflow-core:$rootProject.ext.dbflowVersion"
    compile "com.github.Raizlabs.DBFlow:dbflow:$rootProject.ext.dbflowVersion"
}
